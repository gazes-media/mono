generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
  binaryTargets   = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Anime {
  anilist_id     Int?          @unique
  status         String
  popularity     Int
  genres         String[]
  bannerImage    String?
  coverImage     String
  description    String?
  duration       Int?
  endDate        DateTime?
  episodes       Int?
  description_fr String?
  format         String      @default("TV")
  idMal          Int?
  isAdult        Boolean?
  startDate      DateTime
  synonyms       String[]
  trailer        String
  trending       Int
  url_anime_sama String?       @unique
  url_fr_anime   String?       @unique
  url_neko       String?       @unique
  relations      Int[]
  Id             Int           @id @default(autoincrement())
  title          String?
  titleenglish   String?
  titleromanji   String?
  Episode        Episode[]
  Latest         Latest[]
  Tags           TagsByAnime[]
}

model AnimeHistory {
  id         Int     @id @default(autoincrement())
  timestamp  Int
  duration   Int
  episode_id Int
  user_id    Int
  Episode    Episode @relation(fields: [episode_id], references: [id])
  User       User    @relation(fields: [user_id], references: [id])
}

model Episode {
  id           Int            @id @default(autoincrement())
  time         String
  episode      String
  num          Int
  url          String         @unique
  url_image    String
  anime_id     Int
  AnimeHistory AnimeHistory[]
  Anime        Anime          @relation(fields: [anime_id], references: [Id])
}

model Latest {
  id        Int    @id @default(autoincrement())
  timestamp String
  episode   String
  lang      String
  anime_url String @unique
  anime_id  Int
  Anime     Anime  @relation(fields: [anime_id], references: [Id])
}

model Tags {
  id          Int           @id
  name        String        @unique
  TagsByAnime TagsByAnime[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model TagsByAnime {
  id      Int    @id @default(autoincrement())
  tagId   Int
  rank    Int
  animeId Int?
  anime   Anime? @relation(fields: [animeId], references: [Id])
  Tags    Tags   @relation(fields: [tagId], references: [id])
}

model User {
  id               Int            @id @default(autoincrement())
  email            String         @unique
  password         String?
  username         String         @unique
  discord_id       String?        @unique
  firebase_id      String?        @unique
  avatar_url       String?
  created_at       DateTime       @default(now())
  updated_at       DateTime
  suscribtion_type Int?
  suscribtion_end  DateTime?
  AnimeHistory     AnimeHistory[]
}
